apiVersion: v1
kind: Template
labels:
  template: zookeeper
metadata:
  annotations:
    description: Example of replicated Zookeeper 3.4.6 server
    iconClass: icon-database
    tags: database,zookeeper
  creationTimestamp: null
  name: zookeeper
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: zookeeper-346-jdk7
  spec:
    dockerImageRepository: ${ZOOKEEPER_IMAGE}
    tags:
    - annotations:
        description: Provides Zookeeper 3.4.6 Server
        iconClass: icon-database
        tags: service,zookeeper
        version: 3.4.6
      name: latest
  status:
    dockerImageRepository: ''
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper
    name: zookeeper
  spec:
    ports:
    - name: client
      nodePort: 0
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      name: zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper-1
    name: zookeeper-1
  spec:
    ports:
    - name: client
      nodePort: 0
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: followers
      nodePort: 0
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: election
      nodePort: 0
      port: 3888
      protocol: TCP
      targetPort: 3888
    selector:
      server-id: '1'
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper-2
    name: zookeeper-2
  spec:
    ports:
    - name: client
      nodePort: 0
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: followers
      nodePort: 0
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: election
      nodePort: 0
      port: 3888
      protocol: TCP
      targetPort: 3888
    selector:
      server-id: '2'
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper-3
    name: zookeeper-3
  spec:
    ports:
    - name: client
      nodePort: 0
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: followers
      nodePort: 0
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: election
      nodePort: 0
      port: 3888
      protocol: TCP
      targetPort: 3888
    selector:
      server-id: '3'
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper
      server-id: '1'
    name: zookeeper-1
  spec:
    containers:
    - env:
      - name: SERVER_ID
        value: '1'
      image: ${ZOOKEEPER_IMAGE}
      imagePullPolicy: IfNotPresent
      name: server
      ports:
      - containerPort: 2181
        protocol: TCP
      - containerPort: 2888
        protocol: TCP
      - containerPort: 3888
        protocol: TCP
      resources: {}
      securityContext:
        capabilities: {}
        privileged: false
      terminationMessagePath: /dev/termination-log
      volumeMounts:
      - mountPath: /opt/zookeeper/conf
        name: conf
      - mountPath: /opt/zookeeper/data
        name: data
      - mountPath: /opt/zookeeper/log
        name: log
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    volumes:
    - emptyDir: {}
      name: conf
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: log
  status: {}
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper
      server-id: '2'
    name: zookeeper-2
  spec:
    containers:
    - env:
      - name: SERVER_ID
        value: '2'
      image: ${ZOOKEEPER_IMAGE}
      imagePullPolicy: IfNotPresent
      name: server
      ports:
      - containerPort: 2181
        protocol: TCP
      - containerPort: 2888
        protocol: TCP
      - containerPort: 3888
        protocol: TCP
      resources: {}
      securityContext:
        capabilities: {}
        privileged: false
      terminationMessagePath: /dev/termination-log
      volumeMounts:
      - mountPath: /opt/zookeeper/conf
        name: conf
      - mountPath: /opt/zookeeper/data
        name: data
      - mountPath: /opt/zookeeper/log
        name: log
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    volumes:
    - emptyDir: {}
      name: conf
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: log
  status: {}
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      name: zookeeper
      server-id: '3'
    name: zookeeper-3
  spec:
    containers:
    - env:
      - name: SERVER_ID
        value: '3'
      image: ${ZOOKEEPER_IMAGE}
      imagePullPolicy: IfNotPresent
      name: server
      ports:
      - containerPort: 2181
        protocol: TCP
      - containerPort: 2888
        protocol: TCP
      - containerPort: 3888
        protocol: TCP
      resources: {}
      securityContext:
        capabilities: {}
        privileged: false
      terminationMessagePath: /dev/termination-log
      volumeMounts:
      - mountPath: /opt/zookeeper/conf
        name: conf
      - mountPath: /opt/zookeeper/data
        name: data
      - mountPath: /opt/zookeeper/log
        name: log
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    volumes:
    - emptyDir: {}
      name: conf
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: log
  status: {}
parameters:
- description: The name of Zookeeper Docker image to use
  displayName: Zookeeper Docker Image
  name: ZOOKEEPER_IMAGE
  value: openshift/zookeeper-346-fedora20

